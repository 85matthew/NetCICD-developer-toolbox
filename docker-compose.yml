version: "3.8"

networks:
  tooling:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.11.0/24
  jumphosts:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.111.0/24
  keycloak:
      
services:
  # NetCICD database: we need a central location to store data
  netcicd-db:
    container_name: netcicd-db
    build: netcicd-db
    restart: always
    environment:
      - POSTGRES_MULTIPLE_DATABASES=gitea,keycloak
      - POSTGRES_USER=netcicd
      - POSTGRES_PASSWORD=netcicd

    networks:
      tooling:
        ipv4_address: 172.16.11.2     
    volumes:
      - ./netcicd-db/db:/var/lib/postgresql/data
  
  # Git server. We need a small one in order to run on a single machine. Can be replaced with any.
  gitea: 
    container_name: gitea
    image: gitea/gitea:latest
    restart: always
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - DOMAIN=172.16.11.3
      - SSH_DOMAIN=172.16.11.3
      - DB_TYPE=postgres
      - DB_HOST=netcicd-db:5432
      - DB_NAME=gitea
      - DB_USER=gitea
      - DB_PASSWD=gitea
    networks:
      tooling:
        ipv4_address: 172.16.11.3     
    volumes:
      - ./gitea/data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
#    ports:
#      - 3000:3000
#      - 322:22
    depends_on:
      - netcicd-db
      - keycloak

 # NetCICD Toolbox, containing TACACS, RADIUS,syslog, SNMP
  toolbox:
    container_name: toolbox
    build: ./toolbox
    restart: always
    networks:
      tooling:
        ipv4_address: 172.16.11.6     
#    ports:
#      - 622:22/tcp
#      - 49:49/tcp
#      - 161:161/udp
#      - 162:162/udp
#      - 514:514/udp
#      - 1812:1812/udp
#      - 1813:1813/udp
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

#Jenkins-node
  jenkins-node:
    container_name: jenkins_node
    build: ./jenkins_node
    privileged: true
    user: root
    networks:
      tooling:
        ipv4_address: 172.16.11.7     

# jenkins
  jenkins:
    container_name: jenkins
    build: ./jenkins
    privileged: true
    user: root
    networks:
      tooling:
        ipv4_address: 172.16.11.8     
#    ports:
#      - 822:22/udp
#      - 8081:8080
#      - 50000:50000
    environment:
      - JENKINS_ADMIN_ID=admin
      - JENKINS_ADMIN_PASSWORD=netcicd
    depends_on:
      - jenkins-node
      - keycloak

# Nexus
  nexus:
    container_name: nexus
    image: sonatype/nexus3
    volumes:
      - ./nexus/data:/sonatype-work
    networks:
      tooling:
        ipv4_address: 172.16.11.9     
#    ports:
#      - 922:22/udp
#      - 8082:8081

# Argos
  argos:
    container_name: argos
    image: argosnotary/argosnotary:1.0.0
    volumes:
      - ./argos/data:/data/db
      - ./argos/config:/data/configdb
    networks:
      tooling:
        ipv4_address: 172.16.11.10    
  #    ports:
  #      - 1080:80
  #      - 8090:8080
  #      - 8087:8087
    depends_on:
      - keycloak

# Conjur
# AWX


# Keycloak
  keycloak:
    container_name: keycloak
#    image: quay.io/keycloak/keycloak:latest
    build: keycloak
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: netcicd-db
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: keycloak
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Pa55w0rd
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    networks:
      tooling:
        ipv4_address: 172.16.11.11
      keycloak:   
    ports:
      - 8080:8080
    depends_on:
      - netcicd-db
    
#devmachine
  vscode:
    container_name: vscode
    build: devmachine
    restart: "no"
    networks:
      - jumphosts
    privileged: false
    cap_add:
      - SYS_ADMIN
    environment:
      - DISPLAY
    volumes:
      - "${HOME}:/home/vscode"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/tmp/.X11-unix:/tmp/.X11-unix" 