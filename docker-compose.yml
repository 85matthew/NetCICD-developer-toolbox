version: "3.8"

networks:
  tooling:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.11.0/24
  jumphosts:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.111.0/24
      
services:
  # Git server. We need a small one in order to run on a single machine. Can be replaced with any.
  gitea: 
    container_name: gitea
    image: gitea/gitea:latest
    restart: always
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - DOMAIN=172.16.11.3
      - SSH_DOMAIN=172.16.11.3
      - DB_TYPE=postgres
      - DB_HOST=db:5432
      - DB_NAME=gitea
      - DB_USER=gitea
      - DB_PASSWD=gitea
    networks:
      tooling:
        ipv4_address: 172.16.11.3     
    volumes:
      - ./gitea/data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
#    ports:
#      - 3000:3000
#      - 322:22
    depends_on:
      - gitea-db

  gitea-db:
    container_name: gitea-db
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=gitea
      - POSTGRES_PASSWORD=gitea
      - POSTGRES_DB=gitea
    networks:
      tooling:
        ipv4_address: 172.16.11.4     
    volumes:
      - ./gitea/db:/var/lib/postgresql/data

# NetCICD Toolbox, containing TACACS, RADIUS,syslog, SNMP
  toolbox:
    container_name: toolbox
    build: ./toolbox
    restart: always
    networks:
      tooling:
        ipv4_address: 172.16.11.6     
#    ports:
#      - 622:22/tcp
#      - 49:49/tcp
#      - 161:161/udp
#      - 162:162/udp
#      - 514:514/udp
#      - 1812:1812/udp
#      - 1813:1813/udp
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

# jenkins
  jenkins:
    container_name: jenkins
    build: ./jenkins
    privileged: true
    user: root
    networks:
      tooling:
        ipv4_address: 172.16.11.8     
#    ports:
#      - 822:22/udp
#      - 8081:8080
#      - 50000:50000
    volumes:
      - ./jenkins/data:/var/jenkins_home
      - ./jenkins/sock:/var/run/docker.sock
      - ./jenkins/docker:/usr/local/bin/docker
      - ./jenkins/config:/var/jenkins_conf
    environment:
      - CASC_JENKINS_CONFIG=/var/jenkins_conf

# Nexus
  nexus:
    container_name: nexus
    image: sonatype/nexus3
    volumes:
      - ./nexus/data:/sonatype-work
    networks:
      tooling:
        ipv4_address: 172.16.11.9     
#    ports:
#      - 922:22/udp
#      - 8082:8081

# Argos
  argos:
    container_name: argos
    image: argosnotary/argosnotary:1.0.0
    volumes:
      - ./argos/data:/data/db
      - ./argos/config:/data/configdb
    networks:
      tooling:
        ipv4_address: 172.16.11.10    
  #    ports:
  #      - 1080:80
  #      - 8090:8080
  #      - 8087:8087
  
# Conjur
# AWX


# Keycloak
  keycloak-db:
    image: postgres
    container_name: keycloak-db
    volumes:
      - ./keycloak/db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
  
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Pa55w0rd
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    ports:
      - 8080:8080
    depends_on:
      - keycloak-db

#devmachine
  vscode:
    container_name: vscode
    build: devmachine
    restart: "no"
    networks:
      - jumphosts
    privileged: false
    cap_add:
      - SYS_ADMIN
    environment:
      - DISPLAY
    volumes:
      - "${HOME}:/home/vscode"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/tmp/.X11-unix:/tmp/.X11-unix" 